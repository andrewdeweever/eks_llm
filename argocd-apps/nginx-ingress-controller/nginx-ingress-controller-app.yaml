apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nginx-ingress-controller
  namespace: argocd  # Assumes ArgoCD installed in 'argocd' namespace
  # Labels: e.g., app.kubernetes.io/part-of: ingress
spec:
  project: default  # Use dedicated project for isolation in production
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx  # Official Helm repo
    chart: ingress-nginx
    targetRevision: 4.11.3  # Latest stable version; pin for production
    helm:
      releaseName: nginx-ingress-controller
      # valueFiles:
      #   - https://raw.githubusercontent.com/andrewdeweever/eks_llm/main/argocd-apps/nginx-ingress-controller/nginx-ingress-controller-values.yaml  # Replace with your Git repo URL and branch; supports private repos with ArgoCD credentials
      values: |
        controller:
          replicaCount: 2
          service:
            type: LoadBalancer  # For AWS, this creates an ELB; use annotations for ALB if preferred
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-type: "nlb"  # Use NLB for better performance; change to "classic" or remove for ELB
              service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
            limits:
              cpu: 200m
              memory: 180Mi
          config:
            use-forwarded-headers: "true"
            compute-full-forwarded-for: "true"
            use-proxy-protocol: "false"  # Enable if NLB uses proxy protocol
            log-format-upstream: '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_length $request_time $upstream_response_time $pipe $upstream_addr'
          metrics:
            enabled: true
            serviceMonitor:
              enabled: false  # For Prometheus integration
          admissionWebhooks:
            enabled: true
          podSecurityContext:
            runAsUser: 101  # Non-root
            fsGroup: 101
          securityContext:
            allowPrivilegeEscalation: false
          rbac:
            create: true
            scope: cluster  # Cluster-wide for ingress
      # For secrets, use helm.parameters: e.g., --set controller.service.annotations.service\.beta\.kubernetes\.io/aws-load-balancer-ssl-cert=arn:aws:acm:...
  destination:
    server: https://kubernetes.default.svc  # In-cluster
    namespace: nginx-ingress  # Dedicated namespace
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true
    # IgnoreDifferences for resources like LoadBalancer IP if dynamic
  # info: { url: http://nginx-ingress-controller-nginx-ingress-controller.nginx-ingress.svc.cluster.local }  # Optional
  # Assumptions: AWS EKS; prerequisites: ClusterRoleBindings for webhook if enabled