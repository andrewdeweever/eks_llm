apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-dns
  namespace: argocd  # Assumes ArgoCD in 'argocd' namespace
  # Labels: e.g., app.kubernetes.io/name: external-dns
spec:
  project: default  # Dedicated project recommended
  source:
    repoURL: https://kubernetes-sigs.github.io/external-dns  # Official Helm repo
    chart: external-dns
    targetRevision: 1.19.0  # Latest stable; pin for production
    helm:
      releaseName: external-dns
      values: |
        # Custom values for external-dns Helm chart.
        # Assumptions: AWS EKS with Route53; prerequisites: IAM role for external-dns or Secret with AWS credentials (access-key-id, secret-access-key).
        # Official chart: https://kubernetes-sigs.github.io/external-dns, version 1.15.3
        # Alternatives: Bitnami/external-dns (similar, but SIGs is official Kubernetes project).
        
        provider:
          name: aws  # Route53 provider
        
        env:
          - name: AWS_DEFAULT_REGION
            value: us-west-2
        
        domainFilters:
          - bsisandbox.com  # Placeholder; add your hosted zones
        
        filterIncludeDomains:
          - deweever.bsisandbox.com
        
        policy: sync  # Sync policy: upsert and delete
        
        sources:
          - ingress
        
        replicaCount: 1
        
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 200Mi
        
        # TXT owner ID for Route53
        txtOwnerId: external-dns
        
        # Security
        podSecurityContext:
          runAsNonRoot: true
          runAsUser: 65534  # nobody
          fsGroup: 65534
        
        securityContext:
          allowPrivilegeEscalation: false
        
        # RBAC
        rbac:
          create: true
          pspEnabled: false  # If using PodSecurityPolicies
        
        # Service account
        serviceAccount:
          create: true
          annotations:
            eks.amazonaws.com/role-arn: arn:aws:iam::704855531002:role/eks-llm-external-dns
          # Example for IAM: annotations: { eks\\.amazonaws\\.com/role-arn: "arn:aws:iam::123456789012:role/external-dns" }
        
        
        # Log level
        logLevel: info
        
        # For secrets management: Create Secret external-dns-aws in namespace external-dns
        # kubectl create secret generic external-dns-aws --from-literal=access-key-id=... --from-literal=secret-access-key=... -n external-dns
      # For secrets, pre-create Secret in namespace or use helm.parameters, e.g., --set aws.credentials.accessKeyId=...
  destination:
    server: https://kubernetes.default.svc
    namespace: external-dns  # Dedicated namespace
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true
    # IgnoreDifferences for dynamic resources if needed
  # info: {}  # Optional
  # Assumptions: AWS EKS with Route53; post-install: Create AWS Secret or IAM role as noted in values.yaml
  # Alternatives: Bitnami chart at https://charts.bitnami.com/bitnami, but official SIGs preferred for Kubernetes integration